// Generated by Haxe 3.4.0
(function ($hx_exports) { "use strict";
var Simon = function() { };
Simon.main = function() {
	Simon.setHTML(Menu.getHTML());
};
Simon.setHTML = function(html) {
	window.document.getElementById("app").innerHTML = html;
};
var Menu = function() { };
Menu.getHTML = function() {
	return window.document.getElementById("menu").innerHTML;
};
Menu.start = function() {
};
Menu.strict = function() {
};
var Game = $hx_exports["Game"] = function() { };
Game.getHTML = function() {
	return window.document.getElementById("game").innerHTML;
};
Game.enter = function() {
};
Game.leave = function() {
};
Game.btn = function(btnClr) {
	return function() {
		console.log(btnClr);
		if(Game.rounds[Game.count] == btnClr) {
			Game.advance();
		}
	};
};
Game.advance = function() {
	if(Game.count < Game.rounds.length - 1) {
		Game.count++;
	} else {
		Game.count = 0;
		Game.getnext();
	}
};
Game.getnext = function() {
	var tmp;
	switch(Math.floor(Math.random() * 4)) {
	case 0:
		tmp = "red";
		break;
	case 1:
		tmp = "blue";
		break;
	case 2:
		tmp = "green";
		break;
	case 3:
		tmp = "yellow";
		break;
	default:
		tmp = "yellow";
	}
	Game.rounds.push(tmp);
	console.log(Game.rounds);
};
Game.flash = function(clr) {
};
Game.demonstrate = function() {
};
Simon.main();
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this);
